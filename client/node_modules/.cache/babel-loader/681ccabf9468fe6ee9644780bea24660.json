{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst dummyBooks = Array(10).fill('skeleton');\nconst initialState = {\n  books: {\n    seriesBooks: dummyBooks,\n    authorBooks: dummyBooks,\n    typeBooks: dummyBooks,\n    publisherBooks: dummyBooks,\n    mostBorrowed: dummyBooks,\n    amazonBestsellers: dummyBooks,\n    searchedBooks: null\n  },\n  series: [],\n  authors: [],\n  types: [],\n  publishers: [],\n  searchQuery: ''\n};\nexport const bookSlice = createSlice({\n  name: 'book',\n  initialState,\n  reducers: {\n    setBooks: (state, action) => {\n      state.books[action.payload.category] = action.payload.books;\n    },\n    addBooks: (state, action) => {\n      const booksMap = new Map();\n      const newBooks = [...state.books[action.payload.category], ...action.payload.books];\n      newBooks.forEach(book => {\n        booksMap.set(book.guid, book);\n      });\n      state.books[action.payload.category] = Array.from(booksMap.values());\n    },\n    setSeries: (state, action) => {\n      state.series = action.payload.series;\n    },\n    setAuthors: (state, action) => {\n      state.authors = action.payload.authors;\n    },\n    setTypes: (state, action) => {\n      state.types = action.payload.types;\n    },\n    setPublishers: (state, action) => {\n      state.publishers = action.payload.publishers;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload.searchQuery;\n    },\n    setSearchedBooks: (state, action) => {\n      state.books.searchedBooks = action.payload.searchedBooks;\n    }\n  }\n});\nexport const {\n  addBooks,\n  setBooks,\n  setSeries,\n  setAuthors,\n  setTypes,\n  setPublishers,\n  setSearchQuery,\n  setSearchedBooks\n} = bookSlice.actions;\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","dummyBooks","Array","fill","initialState","books","seriesBooks","authorBooks","typeBooks","publisherBooks","mostBorrowed","amazonBestsellers","searchedBooks","series","authors","types","publishers","searchQuery","bookSlice","name","reducers","setBooks","state","action","payload","category","addBooks","booksMap","Map","newBooks","forEach","book","set","guid","from","values","setSeries","setAuthors","setTypes","setPublishers","setSearchQuery","setSearchedBooks","actions","reducer"],"sources":["/home/ubuntu/bukrent/client/src/reducers/bookSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst dummyBooks = Array(10).fill('skeleton');\n\nconst initialState = {\n\tbooks: {\n\t\tseriesBooks: dummyBooks,\n\t\tauthorBooks: dummyBooks,\n\t\ttypeBooks: dummyBooks,\n\t\tpublisherBooks: dummyBooks,\n\t\tmostBorrowed: dummyBooks,\n\t\tamazonBestsellers: dummyBooks,\n\t\tsearchedBooks: null,\n\t},\n\tseries: [],\n\tauthors: [],\n\ttypes: [],\n\tpublishers: [],\n\tsearchQuery: '',\n};\n\nexport const bookSlice = createSlice({\n\tname: 'book',\n\tinitialState,\n\treducers: {\n\t\tsetBooks: (state, action) => {\n\t\t\tstate.books[action.payload.category] = action.payload.books;\n\t\t},\n\t\taddBooks: (state, action) => {\n\t\t\tconst booksMap = new Map();\n\t\t\tconst newBooks = [ ...state.books[action.payload.category], ...action.payload.books ];\n\t\t\tnewBooks.forEach(book => {\n\t\t\t\tbooksMap.set(book.guid, book);\n\t\t\t});\n\t\t\tstate.books[action.payload.category] = Array.from(booksMap.values());\n\t\t},\n\t\tsetSeries: (state, action) => {\n\t\t\tstate.series = action.payload.series;\n\t\t},\n\t\tsetAuthors: (state, action) => {\n\t\t\tstate.authors = action.payload.authors;\n\t\t},\n\t\tsetTypes: (state, action) => {\n\t\t\tstate.types = action.payload.types;\n\t\t},\n\t\tsetPublishers: (state, action) => {\n\t\t\tstate.publishers = action.payload.publishers;\n\t\t},\n\t\tsetSearchQuery: (state, action) => {\n\t\t\tstate.searchQuery = action.payload.searchQuery;\n\t\t},\n\t\tsetSearchedBooks: (state, action) => {\n\t\t\tstate.books.searchedBooks = action.payload.searchedBooks;\n\t\t},\n\t},\n});\n\nexport const {\n\taddBooks,\n\tsetBooks,\n\tsetSeries,\n\tsetAuthors,\n\tsetTypes,\n\tsetPublishers,\n\tsetSearchQuery,\n\tsetSearchedBooks,\n} = bookSlice.actions;\n\nexport default bookSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,UAAU,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,UAAf,CAAnB;AAEA,MAAMC,YAAY,GAAG;EACpBC,KAAK,EAAE;IACNC,WAAW,EAAEL,UADP;IAENM,WAAW,EAAEN,UAFP;IAGNO,SAAS,EAAEP,UAHL;IAINQ,cAAc,EAAER,UAJV;IAKNS,YAAY,EAAET,UALR;IAMNU,iBAAiB,EAAEV,UANb;IAONW,aAAa,EAAE;EAPT,CADa;EAUpBC,MAAM,EAAE,EAVY;EAWpBC,OAAO,EAAE,EAXW;EAYpBC,KAAK,EAAE,EAZa;EAapBC,UAAU,EAAE,EAbQ;EAcpBC,WAAW,EAAE;AAdO,CAArB;AAiBA,OAAO,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EACpCmB,IAAI,EAAE,MAD8B;EAEpCf,YAFoC;EAGpCgB,QAAQ,EAAE;IACTC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACjB,KAAN,CAAYkB,MAAM,CAACC,OAAP,CAAeC,QAA3B,IAAuCF,MAAM,CAACC,OAAP,CAAenB,KAAtD;IACA,CAHQ;IAITqB,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC5B,MAAMI,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;MACA,MAAMC,QAAQ,GAAG,CAAE,GAAGP,KAAK,CAACjB,KAAN,CAAYkB,MAAM,CAACC,OAAP,CAAeC,QAA3B,CAAL,EAA2C,GAAGF,MAAM,CAACC,OAAP,CAAenB,KAA7D,CAAjB;MACAwB,QAAQ,CAACC,OAAT,CAAiBC,IAAI,IAAI;QACxBJ,QAAQ,CAACK,GAAT,CAAaD,IAAI,CAACE,IAAlB,EAAwBF,IAAxB;MACA,CAFD;MAGAT,KAAK,CAACjB,KAAN,CAAYkB,MAAM,CAACC,OAAP,CAAeC,QAA3B,IAAuCvB,KAAK,CAACgC,IAAN,CAAWP,QAAQ,CAACQ,MAAT,EAAX,CAAvC;IACA,CAXQ;IAYTC,SAAS,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAP,CAAeX,MAA9B;IACA,CAdQ;IAeTwB,UAAU,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACR,OAAN,GAAgBS,MAAM,CAACC,OAAP,CAAeV,OAA/B;IACA,CAjBQ;IAkBTwB,QAAQ,EAAE,CAAChB,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAAP,CAAeT,KAA7B;IACA,CApBQ;IAqBTwB,aAAa,EAAE,CAACjB,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAAP,CAAeR,UAAlC;IACA,CAvBQ;IAwBTwB,cAAc,EAAE,CAAClB,KAAD,EAAQC,MAAR,KAAmB;MAClCD,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAAP,CAAeP,WAAnC;IACA,CA1BQ;IA2BTwB,gBAAgB,EAAE,CAACnB,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACjB,KAAN,CAAYO,aAAZ,GAA4BW,MAAM,CAACC,OAAP,CAAeZ,aAA3C;IACA;EA7BQ;AAH0B,CAAD,CAA7B;AAoCP,OAAO,MAAM;EACZc,QADY;EAEZL,QAFY;EAGZe,SAHY;EAIZC,UAJY;EAKZC,QALY;EAMZC,aANY;EAOZC,cAPY;EAQZC;AARY,IASTvB,SAAS,CAACwB,OATP;AAWP,eAAexB,SAAS,CAACyB,OAAzB"},"metadata":{},"sourceType":"module"}